[{"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\index.js":"1","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\App.js":"2","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\context\\AuthContext.js":"3","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\Main.jsx":"4","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\ContactView.jsx":"5","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\Signin.jsx":"6","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\Signup.jsx":"7","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\ProtectedRoutes.jsx":"8","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Header.jsx":"9","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\Firebase\\firebase.js":"10","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Contact.jsx":"11","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Contacts.jsx":"12","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\Firebase\\services.jsx":"13","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Notes.jsx":"14","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\AddNote.jsx":"15","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\ContactsView.jsx":"16","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\Dashboard.jsx":"17","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Sidebar.jsx":"18","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\UserInfo.jsx":"19","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\AddContact.jsx":"20"},{"size":322,"mtime":1676164183107,"results":"21","hashOfConfig":"22"},{"size":1371,"mtime":1676164190919,"results":"23","hashOfConfig":"22"},{"size":1409,"mtime":1676164523369,"results":"24","hashOfConfig":"22"},{"size":395,"mtime":1676164183124,"results":"25","hashOfConfig":"22"},{"size":481,"mtime":1676164190978,"results":"26","hashOfConfig":"22"},{"size":2704,"mtime":1676164523374,"results":"27","hashOfConfig":"22"},{"size":3178,"mtime":1676164190994,"results":"28","hashOfConfig":"22"},{"size":390,"mtime":1676164190952,"results":"29","hashOfConfig":"22"},{"size":2255,"mtime":1676164190945,"results":"30","hashOfConfig":"22"},{"size":851,"mtime":1668224052981,"results":"31","hashOfConfig":"22"},{"size":17109,"mtime":1676164190932,"results":"32","hashOfConfig":"22"},{"size":10096,"mtime":1676164694350,"results":"33","hashOfConfig":"22"},{"size":1857,"mtime":1676164190924,"results":"34","hashOfConfig":"22"},{"size":2215,"mtime":1676164190949,"results":"35","hashOfConfig":"22"},{"size":965,"mtime":1676164190928,"results":"36","hashOfConfig":"22"},{"size":787,"mtime":1676164523370,"results":"37","hashOfConfig":"22"},{"size":855,"mtime":1676164190985,"results":"38","hashOfConfig":"22"},{"size":472,"mtime":1676164190958,"results":"39","hashOfConfig":"22"},{"size":1696,"mtime":1676164190963,"results":"40","hashOfConfig":"22"},{"size":0,"mtime":1676164523359,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"167ah7m",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"45"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"45"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"45"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"45"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\index.js",[],[],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\App.js",[],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\context\\AuthContext.js",[],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\Main.jsx",["113"],[],"import React from 'react'\r\nimport {Header} from '../components/Header'\r\nimport bttopper from '../images/bt_topper.png'\r\n\r\nexport const Main = () => {\r\n  return (\r\n    <>\r\n        <Header data={\"Main Screen\"}></Header>\r\n        <div className='container'>\r\n          <div className='child'>\r\n              <img id='btBanner' src={bttopper}/>\r\n          </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\ContactView.jsx",[],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\Signin.jsx",["114"],[],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { UserAuth } from '../context/AuthContext';\r\nimport {Header} from '../components/Header'\r\n\r\nconst Signin = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n<<<<<<< HEAD\r\n  const { user, signIn, emailVerified, googleSignin, googleSigninRedir } = UserAuth();\r\n  \r\n  useEffect(()=>{\r\n    if(user && emailVerified){\r\n      navigate('/Dashboard')\r\n    }\r\n  },[user])\r\n=======\r\n  const { user, signIn, emailVerified } = UserAuth();\r\n>>>>>>> parent of 04c1e745 (Alpha Testing Ready)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('')\r\n    try {\r\n      await signIn(email, password)\r\n      navigate('/Dashboard')\r\n    } catch (e) {\r\n      setError(e.message)\r\n      console.log(e.message)\r\n    }\r\n  }\r\n<<<<<<< HEAD\r\n=======\r\n\r\n\r\n\r\n>>>>>>> parent of 04c1e745 (Alpha Testing Ready)\r\n\r\n  return (\r\n    <>\r\n    <Header data={\"Sign In\"}></Header>\r\n    <div className='container center_text'>\r\n      <div className='child_25 card'>\r\n        <div>\r\n          <div>\r\n            <h1>Sign in to your account</h1>\r\n            <p>\r\n              Don't have an account yet?{' '}\r\n              <Link className='txtBLUE' to='/signup'>\r\n                Sign up.\r\n              </Link>\r\n            </p>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label className='p5'>Email Address</label><br/>\r\n              <input onChange={(e) => setEmail(e.target.value)} className='p8 border_rounded' type='email' />\r\n            </div>\r\n            <div >\r\n              <label className='p5'>Password</label><br/>\r\n              <input onChange={(e) => setPassword(e.target.value)} className='p8 border_rounded' type='password' />\r\n            </div>\r\n            <button>\r\n              Sign In\r\n            </button>\r\n          </form>\r\n          {!error ? '':<p style={{color: \"red\"}}>{\"WE COULD NOT IDENTIFY YOUR ACCOUNT\"}</p>}\r\n          {emailVerified == false ? <p style={{color: \"red\"}}>please check your email for email verification</p>:\"\"}\r\n        </div>\r\n        <h3 style={{color: \"red\"}}><i>NOTE: This program is in Alpha Testing \r\n                                    <br/> and Currently in Development \r\n                                    <br/> please provide feedback and suggestions to <a href='Mailto:info@bettertechsol.com' target='blank'>info@bettertechsol.com\r\n                                    </a></i></h3>\r\n      </div>\r\n    </div>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\Signup.jsx",["115"],[],"import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { UserAuth } from '../context/AuthContext';\r\nimport {Header} from '../components/Header'\r\nimport ContactServices from '../Firebase/services'\r\nimport { sendEmailVerification } from \"firebase/auth\";\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordV, setPasswordV] = useState('');\r\n  const [PWerror, setPWError] = useState('')\r\n  const { createUser } = UserAuth();\r\n  const navigate = useNavigate()\r\n\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setPWError('');\r\n    \r\n    if(password != passwordV){\r\n      setPWError(\"Passwords Must Match\")\r\n    }else{\r\n      try {\r\n        await createUser(email, password).then(cred => {\r\n          const UID = cred.user.uid\r\n          const User_email = email\r\n          const dataToAdd = {\r\n              User_email,\r\n              UID\r\n            }\r\n            sendEmailVerification(cred.user)\r\n            ContactServices.createUserAccount(cred.user.uid, dataToAdd)})\r\n            navigate('/Dashboard')\r\n        } catch (e) {\r\n          setPWError(e.message);\r\n        }\r\n      };\r\n    }\r\n\r\n\r\n  return (\r\n  <>\r\n  <Header data={\"Register\"}></Header>\r\n    <div className='container center_text'>\r\n      <div className='child_25 card'>\r\n        <div>\r\n          <div>\r\n            <h1>Sign up for a free account</h1>\r\n            <p>\r\n              Already have an account yet?{' '}\r\n              <Link to='/signin' className='txtBLUE'>\r\n                Sign in.\r\n              </Link>\r\n            </p>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label className='p5'>Email Address</label><br/>\r\n              <input className='p8 border_rounded'\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                type='email'\r\n                />\r\n            </div>\r\n            <div>\r\n              <label className='p5'>Password</label><br/>\r\n              <input className='p8 border_rounded'\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                type='password'\r\n                />\r\n            </div>\r\n            <div>\r\n              <label className='p5' style={!PWerror ? {} : {color: \"red\"}}>Verify Password</label><br/>\r\n              <input className='p8 border_rounded'\r\n                onChange={(e) => setPasswordV(e.target.value)}\r\n                type='password'\r\n                />\r\n            {!PWerror ? '':<p style={{color: \"red\"}}>{PWerror}</p>}\r\n            </div>\r\n            <button>\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n          <h3 style={{color: \"red\"}}><i>NOTE: This program is in Alpha Testing \r\n                                    <br/> and Currently in Development \r\n                                    <br/> please provide feedback and suggestions to <a href='Mailto:info@bettertechsol.com' target='blank'>info@bettertechsol.com\r\n                                    </a></i></h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\ProtectedRoutes.jsx",[],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Header.jsx",["116","117","118","119"],[],"import React from 'react'\r\nimport bttopper from '../images/bt_topper.png'\r\nimport menubtn from '../images/Menu Button BT.png'\r\nimport menubtnX from '../images/Menu Button BT X.png'\r\nimport { UserAuth } from '../context/AuthContext'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function Header(props) {\r\n    const {user, logout} = UserAuth();\r\n    const navigate = useNavigate();\r\n    const [menu, setMenu] = useState();\r\n\r\n    useEffect(()=>{\r\n      setMenu();\r\n     },[])\r\n\r\n        \r\n    const handleLogout = async () => {\r\n      try {\r\n        await logout();\r\n        navigate('/');\r\n        console.log('You are logged out')\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    };\r\n    \r\n    const ShowMenu = () => {\r\n      if(!menu){\r\n        setMenu('true')\r\n      }else{\r\n        setMenu()}\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <div id='mobile_ui'>\r\n      <div className='top'>\r\n        <a href='/Dashboard' className='reset'><img className='headerLogo' alt='company logo'  title='BetterCRM by BetterTech - Better Solutions, Better Prices, BetterTech' src={bttopper}></img></a>\r\n        <h1 className='pageName'>{props.data}</h1>\r\n        <a onClick={ShowMenu} className='logo menubtn'><img id='menubtn' alt='menu hamburger' src={menubtn}/></a>\r\n      </div>\r\n        <nav style={!menu ?  {right:'-100%'} : {right:'0'}} >\r\n            <div className='container'>\r\n                <a onClick={ShowMenu} className='logo' style={{float: 'right'}}><img id='menubtn' alt='menu closer' src={menubtnX}/></a>\r\n                <a onClick={ShowMenu} className='logo'><img id='logo' alt=\"company logo in a card\" src={bttopper}/></a>\r\n            </div>\r\n            <div className=''>\r\n                {!user ? <a className='aTag_Button'href='/'>Main Screen</a> : \"\"}\r\n                {!user ? <a className='aTag_Button' href='/signin'>Sign In</a> : \"\"}\r\n                {!user ? <a className='aTag_Button' href='/signup'>Sign up</a> : \"\"}\r\n                {!user ? \"\" : <a className='aTag_Button' href='/Dashboard'>Dashboard</a>}\r\n                {!user ? \"\" : <a className='aTag_Button' onClick={handleLogout}>Logout</a>}\r\n          </div>\r\n        </nav>\r\n    </div>\r\n    </>\r\n  )\r\n}","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\Firebase\\firebase.js",[],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Contact.jsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],[],"import React, { useEffect, useState } from 'react'\r\nimport ContactsServices from '../Firebase/services'\r\nimport AddNote from '../components/AddNote'\r\nimport Notes from '../components/Notes'\r\nimport { useLocation, Link } from 'react-router-dom'\r\nimport moment from 'moment';\r\n\r\nexport default function Contact() {\r\n//data import\r\n  const [contactData, setContactData] = useState([])\r\n  const location = useLocation()\r\n  const {from} = location.state\r\n  const contactId = from\r\n  //State changes to alter ui\r\n  const [changeDataFirstName, setChangeDataFirstName] = useState('')\r\n  const [changeDataLastName, setChangeDataLastName] = useState('')\r\n  const [changeDataEmail, setChangeDataEmail] = useState('')\r\n  const [changeDataPhone01, setChangeDataPhone01] = useState('')\r\n  const [changeDataPhone02, setChangeDataPhone02] = useState('')\r\n  const [changeDataCompany, setChangeDataCompany] = useState('')\r\n  const [changeDataStatus, setChangeDataStatus] = useState('')\r\n  const [changeDataWebsite, setChangeDataWebsite] = useState('')\r\n  const [changeDataCustomBox01Title, setChangeDataCustomBox01Title] = useState('')\r\n  const [changeDataCustomBox02Title, setChangeDataCustomBox02Title] = useState('')\r\n  const [changeDataCustomBox01Content, setChangeDataCustomBox01Content] = useState('')\r\n  const [changeDataCustomBox02Content, setChangeDataCustomBox02Content] = useState('')\r\n  const [changeDataSocialMedia, setChangeDataSocialMedia] = useState('')\r\n  //data export  \r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone01, setPhone01] = useState('')\r\n  const [phone02, setPhone02] = useState('')\r\n  const [company, setCompany] = useState('')\r\n  const [status, setStatus] = useState('')\r\n  const [website, setWebsite] = useState('')\r\n  const [socialMedia, setSocialMedia] = useState('')\r\n  const [customBox01Title, setCustomBox01Title] = useState('')\r\n  const [customBox02Title, setCustomBox02Title] = useState('')\r\n  const [customBox01Content, setCustomBox01Content] = useState('')\r\n  const [customBox02Content, setCustomBox02Content] = useState('')\r\n  const [loading, setLoading] = useState('Loading...')\r\n  const lastUpdated = new Date();\r\n//General\r\nconst [alert, setAlert] = useState('')\r\n\r\n\r\nuseEffect(()=>{\r\n  getContact();\r\n},[])\r\n\r\nconst getContact = async ()=>{\r\n  const data = await ContactsServices.getSingleDoc(contactId); \r\n  setContactData(data.data())\r\n  setLoading(\"\")\r\n}\r\n\r\nconst updateContact = async (data, data2,data3)=>{\r\n  const dataToUpdate = {\r\n    [data]: data2,\r\n    lastUpdated: lastUpdated,\r\n  }\r\n  await ContactsServices.updateSingleDoc(contactId, dataToUpdate).catch(err=>console.log(err))\r\n  [data3]\r\n  getContact()\r\n  alarm(\"Contact Updated\")\r\n}\r\n\r\nconst alarm = (msg)=>{\r\n  setAlert(msg)\r\n  setTimeout(()=>{setAlert('')},2900)\r\n}\r\n\r\nreturn (\r\n  <>\r\n      <div className='grid4x4'>\r\n        <div className='grid_contact_table'>\r\n                <div id=\"toast\" className={!alert ? \"\" : \"show\"}>{alert}</div>\r\n          <table>\r\n          \r\n            <tbody>\r\n{/* STATUS */}              \r\n              <tr>                \r\n                <td style={{background: 'lightgray'}}><strong>Status</strong></td>\r\n                <td>\r\n                   \r\n                    <>\r\n                      <select value={contactData.status} onChange={(e)=>updateContact(\"status\",e.target.value,setChangeDataStatus(\"\"))}>\r\n                        <option>Pending</option>\r\n                        <option>Active</option>\r\n                        <option>Inactive</option>\r\n                      </select>\r\n                      \r\n                    </>\r\n                  \r\n                </td>               \r\n              </tr>\r\n{/* CREATED */}\r\n              <tr>\r\n                <td>Created</td>\r\n                {loading ? loading :\r\n                <td>{moment(new Date(contactData.timestamp.seconds * 1000)).format(\"MM/DD/YY  h:mm a\")}</td>\r\n                }\r\n              \r\n              </tr>\r\n{/* Last Updated */}              \r\n              <tr>\r\n                <td>Last Updated</td>\r\n                {loading ? loading :\r\n                  <td>{moment(new Date(contactData.lastUpdated.seconds * 1000)).format(\"MM/DD/YY  h:mm a\")}</td>\r\n                }\r\n              \r\n              </tr>\r\n{/* FIRST NAME */}\r\n              <tr>\r\n                <td style={{background: 'lightgray'}}><strong>First Name</strong></td>\r\n                <td>\r\n                  {!changeDataFirstName ? \r\n                    contactData.first_name \r\n                    : \r\n                    <>\r\n                      <input type='text' value={firstName} onChange={(e)=>setFirstName(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataFirstName ? \r\n                    <a onClick={(e)=>setChangeDataFirstName(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!firstName ?\r\n                       (e)=>setChangeDataFirstName(\"\")\r\n                       :\r\n                       ()=>updateContact(\"first_name\",firstName,setChangeDataFirstName(\"\"))\r\n                      }>update </a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* LAST NAME */}              \r\n              <tr>\r\n                <td style={{background: 'lightgray'}}><strong>Last Name</strong></td>\r\n                <td>\r\n                  {!changeDataLastName ? \r\n                    contactData.last_name \r\n                    : \r\n                    <>\r\n                      <input type='text' value={lastName} onChange={(e)=>setLastName(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataLastName ? \r\n                    <a onClick={(e)=>setChangeDataLastName(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!lastName ?\r\n                       (e)=>setChangeDataLastName(\"\")\r\n                       :\r\n                       ()=>updateContact(\"last_name\",lastName,setChangeDataLastName(\"\"))\r\n                      }>update </a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* EMAIL */}              \r\n              <tr>\r\n                <td style={{background: 'lightgray'}}><strong>Email</strong></td>\r\n                <td>\r\n                  {!changeDataEmail ? \r\n                    <a className='reset' href={'mailto:'+contactData.email} target='blank'>{contactData.email}</a> \r\n                    : \r\n                    <>\r\n                      <input type='email' value={email} onChange={(e)=>setEmail(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataEmail ? \r\n                    <a onClick={(e)=>setChangeDataEmail(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!email ?\r\n                       (e)=>setChangeDataEmail(\"\")\r\n                       :\r\n                       ()=>updateContact(\"email\",email,setChangeDataEmail(\"\"))\r\n                      }>update </a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* MAIN PHONE */}              \r\n              <tr>\r\n                <td style={{background: 'lightgray'}}><strong>Main Phone</strong></td>\r\n                <td>\r\n                  {!changeDataPhone01 ? \r\n                    contactData.phone_number01 \r\n                    : \r\n                    <>\r\n                      <input type='text' value={phone01} onChange={(e)=>setPhone01(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataPhone01 ? \r\n                    <a onClick={(e)=>setChangeDataPhone01(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!phone01 ?\r\n                       (e)=>setChangeDataPhone01(\"\")\r\n                       :\r\n                       ()=>updateContact(\"phone_number01\",phone01,setChangeDataPhone01(\"\"))\r\n                      }>update </a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* SECONDARY PHONE */}              \r\n              <tr>\r\n                <td style={{background: 'lightgray'}}><strong>Secondary Phone</strong></td>\r\n                <td>\r\n                  {!changeDataPhone02 ? \r\n                    contactData.phone_number02 \r\n                    : \r\n                    <>\r\n                      <input type='text' value={phone02} onChange={(e)=>setPhone02(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataPhone02 ? \r\n                    <a onClick={(e)=>setChangeDataPhone02(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!phone02 ?\r\n                       (e)=>setChangeDataPhone02(\"\")\r\n                       :\r\n                       ()=>updateContact(\"phone_number02\",phone02,setChangeDataPhone02(\"\"))\r\n                      }>update </a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* COMPANY */}              \r\n              <tr>\r\n                <td style={{background: 'lightgray'}}><strong>Company</strong></td>\r\n                <td>\r\n                  {!changeDataCompany ? \r\n                    contactData.Company \r\n                    : \r\n                    <>\r\n                      <input type='text' value={company} onChange={(e)=>setCompany(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataCompany ? \r\n                    <a onClick={(e)=>setChangeDataCompany(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!company ?\r\n                       (e)=>setChangeDataCompany(\"\")\r\n                       :\r\n                       ()=>updateContact(\"Company\",company,setChangeDataCompany(\"\"))\r\n                      }>update </a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* WEBSITE */}\r\n              <tr>\r\n                <td style={{background: 'lightgray'}}><strong>Website</strong></td>\r\n                <td>\r\n                  {!changeDataWebsite ? \r\n                    <a href={contactData.website} target=\"blank\">{contactData.website}</a> \r\n                    : \r\n                    <>\r\n                      <input type='text' value={website} onChange={(e)=>setWebsite(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataWebsite ? \r\n                    <a onClick={(e)=>setChangeDataWebsite(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!website ?\r\n                       (e)=>setChangeDataWebsite(\"\")\r\n                       :\r\n                       ()=>updateContact(\"website\",website,setChangeDataWebsite(\"\"))\r\n                      }>update </a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* SOCIAL MEDIA */}\r\n              <tr>\r\n                <td style={{background: 'lightgray'}}><strong>Social Media</strong></td>\r\n                <td>\r\n                  {!changeDataSocialMedia ? \r\n                    <a href={contactData.socialMedia} target=\"blank\">{contactData.socialMedia}</a> \r\n                    : \r\n                    <>\r\n                      <input type='text' value={socialMedia} onChange={(e)=>setSocialMedia(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataSocialMedia ? \r\n                    <a onClick={(e)=>setChangeDataSocialMedia(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!socialMedia ?\r\n                       (e)=>setChangeDataSocialMedia(\"\")\r\n                       :\r\n                       ()=>updateContact(\"socialMedia\",socialMedia,setChangeDataSocialMedia(\"\"))\r\n                      }>update </a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* CUSTOMBOX01 */}\r\n              <tr>\r\n                <td style={{background: 'lightgray'}}>\r\n                  {!changeDataCustomBox01Title ? \r\n                    <strong><a className={!contactData.customBox01Title ? \"\":'reset' } onClick={()=>setChangeDataCustomBox01Title('1')}>{!contactData.customBox01Title?\"click to change Title\": contactData.customBox01Title}\r\n                    </a></strong>\r\n                    : \r\n                    <>\r\n                      <input \r\n                        type='text'\r\n                        id='customBox01Title' \r\n                        value={customBox01Title} \r\n                        onChange={(e)=>setCustomBox01Title(e.target.value)}\r\n                        onKeyDown={(e)=>{\r\n                          if(e.key === 'Enter'){\r\n                            updateContact('customBox01Title',customBox01Title,setChangeDataCustomBox01Title(''))\r\n                          }\r\n                        }}\r\n                        >\r\n                        \r\n                      </input>\r\n                    </>\r\n                  }\r\n                  </td>\r\n                <td>\r\n                  {!changeDataCustomBox01Content ? \r\n                    contactData.customBox01Content \r\n                    : \r\n                    <>\r\n                      <input \r\n                        type='text' \r\n                        value={customBox01Content} \r\n                        onChange={(e)=>setCustomBox01Content(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataCustomBox01Content ? \r\n                    <a onClick={(e)=>setChangeDataCustomBox01Content(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!customBox01Content ?\r\n                       (e)=>setChangeDataCustomBox01Content(\"\")\r\n                       :\r\n                       ()=>updateContact(\"customBox01Content\",customBox01Content,setChangeDataCustomBox01Content(\"\"))\r\n                      }>update</a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n{/* CUSTOMBOX02 */}\r\n              <tr>\r\n                <td style={{background: 'lightgray'}}>\r\n                  {!changeDataCustomBox02Title ? \r\n                    <strong><a className={!contactData.customBox02Title ? \"\":'reset' } onClick={()=>setChangeDataCustomBox02Title('1')}>{!contactData.customBox02Title?\"click to change Title\": contactData.customBox02Title}\r\n                    </a></strong>\r\n                    : \r\n                    <>\r\n                      <input \r\n                        type='text'\r\n                        id='customBox02Title' \r\n                        value={customBox02Title} \r\n                        onChange={(e)=>setCustomBox02Title(e.target.value)}\r\n                        onKeyDown={(e)=>{\r\n                          if(e.key === 'Enter'){\r\n                            updateContact('customBox02Title',customBox02Title,setChangeDataCustomBox02Title(''))\r\n                          }\r\n                        }}\r\n                        >\r\n                        \r\n                      </input>\r\n                    </>\r\n                  }\r\n                  </td>\r\n                <td>\r\n                  {!changeDataCustomBox02Content ? \r\n                    contactData.customBox02Content \r\n                    : \r\n                    <>\r\n                      <input \r\n                        type='text' \r\n                        value={customBox02Content} \r\n                        onChange={(e)=>setCustomBox02Content(e.target.value)}>\r\n                      </input>\r\n                    </>\r\n                  }\r\n                </td>               \r\n                <td>\r\n                  {!changeDataCustomBox02Content ? \r\n                    <a onClick={(e)=>setChangeDataCustomBox02Content(\"1\")}>Edit</a> \r\n                    :\r\n                    <a onClick={!customBox02Content ?\r\n                       (e)=>setChangeDataCustomBox02Content(\"\")\r\n                       :\r\n                       ()=>updateContact(\"customBox02Content\",customBox02Content,setChangeDataCustomBox02Content(\"\"))\r\n                      }>update</a> \r\n                    }\r\n                </td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className='grid_addNote'>\r\n          <AddNote data={contactId}></AddNote>\r\n        </div>\r\n        <div className='notes'>\r\n          <Notes data={contactId}></Notes>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Contacts.jsx",["147","148"],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\Firebase\\services.jsx",[],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Notes.jsx",["149"],[],"import React, { useState, useEffect } from 'react';\r\nimport ContactsServices from '../Firebase/services';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nexport default function Notes( contactId ) {\r\n    const [notes, setNotes] = useState([])\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    },[]);\r\n\r\n    const getNotes = async () => {\r\n        const data = await ContactsServices.getNotes(contactId.data);\r\n        setNotes(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n        }\r\n    \r\n    const deleteHandler = async (id) => {\r\n        await ContactsServices.deleteNote(id,contactId.data)\r\n        getNotes()\r\n    }\r\n    \r\n  return (\r\n    <>\r\n        <div><h1>Notes</h1></div>\r\n        <div>\r\n        {notes.map((doc, index) =>{\r\n                return(\r\n                        <div className='notesBox' key={doc.id}>\r\n                            <div className='notesTimestamp' key={new Date(doc.timestamp.seconds * 1000).toLocaleDateString(\"en-US\")}>{moment(new Date(doc.timestamp.seconds * 1000)).format(\"MM/DD/yy  h:mm a\")}</div>\r\n                            <div className='notesNote' key={\"note\"+doc.id}>{doc.note}</div>\r\n                            <div className='notesDeleteButton' key={\"delete\"+doc.id}>\r\n                            <button onClick={(e)=>deleteHandler(doc.id)}>DELETE</button>  \r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n        </div>\r\n        {/* <div>\r\n            <table>\r\n                <tbody>\r\n        {notes.map((doc, index) =>{\r\n                return(\r\n                        <tr key={doc.id}>\r\n                            <td key={new Date(doc.timestamp.seconds * 1000).toLocaleDateString(\"en-US\")}>{moment(new Date(doc.timestamp.seconds * 1000)).format(\"MM/DD/yy  h:mm a\")}</td>\r\n                            <td key={\"note\"+doc.id}>{doc.note}</td>\r\n                            <td key={\"delete\"+doc.id}>\r\n                            <button onClick={(e)=>deleteHandler(doc.id)}>DELETE</button>  \r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div> */}\r\n    </>\r\n  )\r\n}\r\n\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\AddNote.jsx",[],[],"C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\ContactsView.jsx",["150"],[],"import React from 'react';\r\nimport { UserAuth } from '../context/AuthContext';\r\nimport {Header} from '../components/Header'\r\nimport Contacts from '../components/Contacts'\r\nimport { AddContact } from '../components/AddContact';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\n\r\nconst ContactsView = () => {\r\n  const { user } = UserAuth();\r\n  \r\n  return (<>\r\n    <Header data={\"Contacts\"}></Header>\r\n    <Sidebar/>\r\n    <div className='main_content'>\r\n      <div className='grid8x8'>\r\n        <Contacts props={user.uid}></Contacts>\r\n      </div>\r\n    </div>\r\n   </>\r\n  );\r\n};\r\n//must use the word props when assigning props to a component\r\n//the props being passed to Contacts is used to run the useEffect in the component to keep rendering the contacts.\r\n\r\nexport default ContactsView;\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\views\\Dashboard.jsx",["151"],[],"import React from 'react';\r\nimport { UserAuth } from '../context/AuthContext';\r\nimport {Header} from '../components/Header'\r\nimport Sidebar from '../components/Sidebar';\r\nimport UserInfo from '../components/UserInfo';\r\n\r\n\r\nconst Dashboard = () => {\r\n  const { user, logout } = UserAuth();\r\n\r\n\r\n  return (<>\r\n    <Header data={\"Account\"}></Header>\r\n    <Sidebar/>\r\n    <div className='main_content'>\r\n      <div className='gridSimple'>\r\n          <div className='grid_userData card_plain p8'>\r\n            <h3>Account Information</h3>\r\n              <UserInfo props={user}></UserInfo>\r\n          </div>\r\n      </div>\r\n    </div>\r\n   </>\r\n  );\r\n};\r\n//must use the word props when assigning props to a component\r\n//the props being passed to Contacts is used to run the useEffect in the component to keep rendering the contacts.\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\Sidebar.jsx",["152","153"],[],"import React from 'react'\r\nimport HOME from '../images/HOME.png'\r\nimport CONTACTS from '../images/CONTACTS.png'\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className='sidebar'>\r\n        <a href='/Dashboard'>\r\n            <img className='icon' title='Dashboard' src={HOME}></img>\r\n        </a>  \r\n        <a href='/account/contacts'>\r\n            <img className='icon' title='Contacts' src={CONTACTS}></img>\r\n        </a>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\UserInfo.jsx",["154"],[],"import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\nexport default function UserInfo({props}) {\r\n    const [display_Name, setDisplay_Name] = useState(\"\")\r\n    const [update , setUpdate] = useState(\"\")\r\n    const [alert, setAlert] = useState('')\r\n\r\n    useEffect(()=>{\r\n        setDisplay_Name(props.displayName)\r\n    },[props])\r\n\r\n    \r\n    const updateUserInformation = async ()=>{\r\n            const newUserData = {\r\n                displayName: display_Name\r\n            }\r\n           await updateProfile(props,newUserData).catch((err)=>console.log(err))\r\n        setUpdate('')\r\n        alarm('User Updated')\r\n    }\r\n\r\n    const alarm = (msg)=>{\r\n        setAlert(msg)\r\n        setTimeout(()=>{setAlert('')},3000)\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <div id=\"toast\" class={!alert ? \"\" : \"show\"}>{alert}</div>\r\n        <p>User: {update == \"yes\" ? \r\n                            <>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={display_Name}\r\n                                    placeholder={display_Name}\r\n                                    onChange={(e) => setDisplay_Name(e.target.value)}\r\n                                />\r\n                                <br/>\r\n                            </>\r\n                            : props.displayName\r\n                        }\r\n        </p>\r\n        <p>Email: {!props.email ? \"\" : props.email}</p>\r\n        <Link onClick={!update? (e)=>setUpdate(\"yes\"):(e)=> updateUserInformation()}>Update Info</Link>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\alexg\\OneDrive\\Documents\\React Projects\\fb_auth_from_github\\client\\src\\components\\AddContact.jsx",[],[],{"ruleId":"155","severity":1,"message":"156","line":11,"column":15,"nodeType":"157","endLine":11,"endColumn":50},{"ruleId":null,"fatal":true,"severity":2,"message":"158","line":12,"column":1},{"ruleId":"159","severity":1,"message":"160","line":21,"column":17,"nodeType":"161","messageId":"162","endLine":21,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":42,"column":9,"nodeType":"157","endLine":42,"endColumn":56},{"ruleId":"163","severity":1,"message":"164","line":46,"column":17,"nodeType":"157","endLine":46,"endColumn":81},{"ruleId":"163","severity":1,"message":"164","line":47,"column":17,"nodeType":"157","endLine":47,"endColumn":56},{"ruleId":"163","severity":1,"message":"164","line":54,"column":31,"nodeType":"157","endLine":54,"endColumn":81},{"ruleId":"165","severity":1,"message":"166","line":5,"column":23,"nodeType":"167","messageId":"168","endLine":5,"endColumn":27},{"ruleId":"165","severity":1,"message":"169","line":21,"column":10,"nodeType":"167","messageId":"168","endLine":21,"endColumn":26},{"ruleId":"165","severity":1,"message":"170","line":35,"column":10,"nodeType":"167","messageId":"168","endLine":35,"endColumn":16},{"ruleId":"165","severity":1,"message":"171","line":35,"column":18,"nodeType":"167","messageId":"168","endLine":35,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":50,"column":3,"nodeType":"174","endLine":50,"endColumn":5,"suggestions":"175"},{"ruleId":"163","severity":1,"message":"164","line":129,"column":21,"nodeType":"157","endLine":129,"endColumn":67},{"ruleId":"163","severity":1,"message":"164","line":131,"column":21,"nodeType":"157","endLine":135,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":154,"column":21,"nodeType":"157","endLine":154,"endColumn":66},{"ruleId":"163","severity":1,"message":"164","line":156,"column":21,"nodeType":"157","endLine":160,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":179,"column":21,"nodeType":"157","endLine":179,"endColumn":63},{"ruleId":"163","severity":1,"message":"164","line":181,"column":21,"nodeType":"157","endLine":185,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":204,"column":21,"nodeType":"157","endLine":204,"endColumn":65},{"ruleId":"163","severity":1,"message":"164","line":206,"column":21,"nodeType":"157","endLine":210,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":229,"column":21,"nodeType":"157","endLine":229,"endColumn":65},{"ruleId":"163","severity":1,"message":"164","line":231,"column":21,"nodeType":"157","endLine":235,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":254,"column":21,"nodeType":"157","endLine":254,"endColumn":65},{"ruleId":"163","severity":1,"message":"164","line":256,"column":21,"nodeType":"157","endLine":260,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":279,"column":21,"nodeType":"157","endLine":279,"endColumn":65},{"ruleId":"163","severity":1,"message":"164","line":281,"column":21,"nodeType":"157","endLine":285,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":304,"column":21,"nodeType":"157","endLine":304,"endColumn":69},{"ruleId":"163","severity":1,"message":"164","line":306,"column":21,"nodeType":"157","endLine":310,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":318,"column":29,"nodeType":"157","endLine":318,"endColumn":137},{"ruleId":"163","severity":1,"message":"164","line":353,"column":21,"nodeType":"157","endLine":353,"endColumn":76},{"ruleId":"163","severity":1,"message":"164","line":355,"column":21,"nodeType":"157","endLine":359,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":367,"column":29,"nodeType":"157","endLine":367,"endColumn":137},{"ruleId":"163","severity":1,"message":"164","line":402,"column":21,"nodeType":"157","endLine":402,"endColumn":76},{"ruleId":"163","severity":1,"message":"164","line":404,"column":21,"nodeType":"157","endLine":408,"endColumn":25},{"ruleId":"172","severity":1,"message":"176","line":31,"column":11,"nodeType":"174","endLine":31,"endColumn":18,"suggestions":"177"},{"ruleId":"163","severity":1,"message":"164","line":154,"column":36,"nodeType":"157","endLine":154,"endColumn":58},{"ruleId":"172","severity":1,"message":"178","line":12,"column":7,"nodeType":"174","endLine":12,"endColumn":9,"suggestions":"179"},{"ruleId":"165","severity":1,"message":"180","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":20},{"ruleId":"165","severity":1,"message":"181","line":9,"column":17,"nodeType":"167","messageId":"168","endLine":9,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":9,"column":13,"nodeType":"157","endLine":9,"endColumn":64},{"ruleId":"155","severity":1,"message":"156","line":12,"column":13,"nodeType":"157","endLine":12,"endColumn":67},{"ruleId":"159","severity":1,"message":"182","line":33,"column":26,"nodeType":"161","messageId":"162","endLine":33,"endColumn":28},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Parsing error: Unexpected token (12:1)","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'changeDataStatus' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getContact'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has missing dependencies: 'getContacts' and 'user.uid'. Either include them or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["185"],"'AddContact' is defined but never used.","'logout' is assigned a value but never used.","Expected '===' and instead saw '=='.",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [getContact]",{"range":"192","text":"193"},"Update the dependencies array to be: [getContacts, props, user.uid]",{"range":"194","text":"195"},"Update the dependencies array to be: [getNotes]",{"range":"196","text":"197"},[2340,2342],"[getContact]",[1243,1250],"[getContacts, props, user.uid]",[285,287],"[getNotes]"]